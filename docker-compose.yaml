version: '3.1'
services:
  ## Pedidos
  app_pedidos:
    container_name: app_pedidos
    build:
      context: ms-pedido-api
      dockerfile: Dockerfile
      args:
        - MAVEN_SKIP_TEST="true"
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:my-secret-pw@mongodb:27017/pedidos?authSource=admin
      SPRING_PROFILES_ACTIVE: hom
    networks:
      - fiap-ms-pedidos
      - kafka-network
  mongodb:
    image: mongo:latest
    container_name: mongodb_pedidos
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: my-secret-pw
      MONGO_INITDB_DATABASE: pedidos
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db/
      - /etc/timezone:/etc/timezone:ro
    networks:
      - fiap-ms-pedidos
  mongo-express:
    image: mongo-express:latest
    container_name: mongodb_express_pedidos
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo
      ME_CONFIG_MONGODB_ADMINPASSWORD: my-secret-pw
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_URL: mongodb://mongo:my-secret-pw@mongo:27017/pedidos?authSource=admin
    ports:
      - "8070:8081"
    depends_on:
      - mongodb
    networks:
      - fiap-ms-pedidos

  ## Admin
  app_admin:
    container_name: app_admin
    build:
      context: ms-admin-api
      dockerfile: Dockerfile
      args:
        - MAVEN_SKIP_TEST=true
    ports:
      - "8081:8081"
    depends_on:
      - postgres_admin
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_admin:5432/admin
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: my-secret-pw
      SPRING_PROFILES_ACTIVE: hom
    networks:
      - fiap-ms-pedidos
      - kafka-network
  postgres_admin:
    container_name: postgres_admin
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: my-secret-pw
      POSTGRES_DB: admin
    ports:
      - "5433:5432"
    volumes:
      - postgres_admin_data:/var/lib/postgresql/data
    networks:
      - fiap-ms-pedidos

  ## Clientes
  app_clientes:
    container_name: app_clientes
    build:
      context: ms-cliente-api
      dockerfile: Dockerfile
      args:
        - MAVEN_SKIP_TEST=true
    ports:
      - "8080:8080"
    depends_on:
      - postgres_cliente
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_cliente:5432/cliente
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: my-secret-pw
      SPRING_PROFILES_ACTIVE: hom
    networks:
      - fiap-ms-pedidos
      - kafka-network
  postgres_cliente:
    container_name: postgres_cliente
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: my-secret-pw
      POSTGRES_DB: cliente
    ports:
      - "5432:5432"
    networks:
      - fiap-ms-pedidos
    volumes:
      - postgres_cliente_data:/var/lib/postgresql/data
  ## Mensageria
  kafka:
    container_name: kafka_fiap
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network
      - fiap-ms-pedidos
    depends_on:
      - zookeeper
  zookeeper:
    container_name: zookeeper_fiap
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-network
      - fiap-ms-pedidos
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  fiap-ms-pedidos:
    driver: bridge
  kafka-network:
    external: true
volumes:
  postgres_cliente_data:
  postgres_admin_data:
  mongodb_data: